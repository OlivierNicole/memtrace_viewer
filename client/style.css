:root {
    --allocated-color: rgb(32, 133, 239);
    --live-color: rgb(255, 128, 0); /* currently vestigial */
    --collected-color: rgb(255, 0, 0);
    --help-color: aliceblue /* currently vestigial */;
    --poi-color: peachpuff;
    --selection-color: #F2D2F6;
    --explore-color: lightgoldenrodyellow;
}
#container{
    display: grid;
    margin-top: 1rem;
    gap: 1rem;
    grid-template:
        "info   info"   auto
        "filter filter" auto
        "poi    explore"   auto
        "poi    main"   minmax(auto,1fr)
        / minmax(30em,1fr) 2fr minmax(17em,1fr);
}
p, ul, h2 {
    margin-top: 0;
    margin-bottom: 0.5rem;
}
.panel {
    border: 1px solid black;
}
.panel-content {
    margin: 0.5rem;
}
h2 {
    padding: 0.5rem;
    text-align: center;
    font-size: 1em;
    background-color: rgba(256, 256, 256, 0.25);
}
ul.tab-bar {
    display: inline-block;
    list-style-type: none;
    margin: 0;
    margin-bottom: 0.5em;
    padding: 0;
}
ul.tab-bar li {
    display: inline;
}
ul.tab-bar button {
    border: none;
    background-color: rgba(256, 256, 256, 0.25);
    cursor: pointer;
    padding: 0.65em 1.6em;
}
ul.tab-bar li:first-child button {
    border-top-left-radius: 0.5em;
    border-bottom-left-radius: 0.5em;
}
ul.tab-bar li:last-child button {
    border-top-right-radius: 0.5em;
    border-bottom-right-radius: 0.5em;
}
ul.tab-bar li.selected button {
    background-color: rgba(256, 256, 256, 0.75);
}
ul.tab-bar li:not(.selected) button:hover {
    background-color: white;
}
#info-panel{
    grid-area: info;
    background-color: #ded2f6;
}
#poi-panel-container{
    grid-area: poi;
}
#poi-panel{
    background-color: var(--poi-color);
}
#explore-panel{
    grid-area: explore;
    background-color: var(--explore-color);
}
#main-panel-container{
    grid-area:main;
}
#main-panel{
    background-color:#D2DAF6;
}
#filter-panel{
    grid-area:filter;
    background-color:#BDF5BD;
}
#details-panel{
    grid-area:details;
    background-color:#F6CBC2;
}
table {
  border-collapse: collapse;
}
tr, td, th {
  border: none;
}
td, th {
  padding: 7px;
}
thead {
  background-color: rgba(256, 256, 256, 25%)
}
tbody tr:nth-child(odd):not(.focused) {
  background-color: rgba(0, 0, 0, 5%)
}
tbody tr:nth-child(even):not(.focused) {
  background-color: rgba(0, 0, 0, 10%)
}
section #explore-panel {
  margin-bottom: 0.5rem;
}
#info-panel .summary ul.info-fields {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
}
#info-panel ul.info-fields li {
  display: inline-block;
  margin-right: 1em;
}
table.location-table {
  min-width: 25em;
  margin-left: auto;
  margin-right: auto;
  table-layout: fixed;
  width: 100%;
}
col.locations-column {
}
col.allocations-column {
    width:6em;
}
table.location-table tbody tr {
  cursor: pointer;
  user-select: none;
}
table.location-table tbody tr:hover {
  background-color: var(--selection-color);
}
.flame-graph-container {
  padding: 0.5rem;
  border: 1px solid black;
  background-color: white;
  max-width: fit-content;
  margin-left: auto;
  margin-right: auto;
}
.flame-graph-node {
  cursor: pointer;
  user-select: none;
}
.flame-graph-node text {
  font-size: 12px;
}
.flame-graph-node rect.flame-graph-node-color-box {
  /* The rect is inside an embedded svg element, so it should take up the whole
     thing */
  /* width: 100%; See comment in Flame_graph_view.Make.render_node */
  height: 100%;
  stroke: transparent;
}
.flame-graph-node-selected rect.flame-graph-node-color-box {
  fill: var(--selection-color) !important; /* override individual style */
  /* We could do without the !important if we could say something like
       <svg class="flame-graph-node" style="--flame-graph-node-color: #eef">
     but the way VirtualDom sets style properties (directly assigning to
     [node.style[property]]) doesn't allow setting CSS variables (for which you
     need to use [node.style.setPropertyValue()] instead), so our only choice is
     to set the fill color directly from an inline style, which means overriding
     it here using !important. */
  stroke: black;
  stroke-width: 3;
}

#filter-panel-body {
  display: grid;
  grid-template:
    "graph allocs"
    "graph form" 1fr
      / auto 1fr;
}
#filter-graph-container {
  grid-area: graph;
  text-align: center;
}
#filter-panel-body .total_allocations {
  grid-area: allocs;
}
#filter-form {
  grid-area: form;
}
#filter-graph {
  width: 500px;
  height: 200px;
}
.graph-border {
  stroke: black;
  fill: white;
}
.graph-line {
  fill: transparent;
}
.full-graph-line {
  stroke: black;
}
.filtered-graph-line {
  stroke: var(--allocated-color);
}
.graph-tick-mark {
  stroke: black;
}
.graph-label {
  font-size: 15px;
  text-anchor: middle;
}
.graph-label.graph-label-long {
  text-anchor: start;
}
.graph-allocated-range {
  --graph-region-color: var(--allocated-color)
}
.graph-live-range {
  --graph-region-color: var(--live-color)
}

.graph-collected-range {
  --graph-region-color: var(--collected-color)
}

.graph-region-bound {
  stroke: var(--graph-region-color);
  width: 2px;
}
.graph-region-interior {
  stroke: none;
  fill: var(--graph-region-color);
  opacity: 0.25;
}
.graph-x-axis-label {
  text-align: center;
}
.swatch {
  width: 1ex;
  height: 1ex;
  vertical-align: middle;
  margin-right: 0.3em;
}
.swatch rect {
  width: 100%;
  height: 100%;
}
.swatch-bg {
  stroke: none;
  fill: white;
}
.swatch-border {
  stroke-width: 2px;
  stroke: var(--swatch-color);
  fill: none;
}
.swatch-interior {
  opacity: 0.25;
  stroke: none;
  fill: var(--swatch-color);
}
.allocated-swatch {
  --swatch-color: var(--allocated-color);
}
.live-swatch {
  --swatch-color: var(--live-color);
}
.collected-swatch {
  --swatch-color: var(--collected-color);
}

#filter-form p {
  margin-top: 0;
}
input.bound {
  /* This keeps the "s" after the field from being vertically offset from other
     text */
  margin-bottom: -3px;
}

input.bound[type="number"] {
  width: 7em;
}

input.bound[type="time"] {
  /* Careful! This needs to accommodate the AM/PM depending on locale */
  width: 10em;
}

input.bound[type="datetime-local"] {
  /* Careful! This needs to accommodate the AM/PM depending on locale */
  width: 20em;
}

.radio-list {
  list-style-type: none;
  padding-left: 1.5em;
}

.radio-list input {
  margin-left: 0;
  margin-right: 0.45em;
}

.checkbox-list {
    list-style-type: none;
    padding-left: 1.5em;
}

.checkbox-list input {
    margin-left: 0;
    margin-right: 0.45em;
}

.clauses {
    list-style-type: none;
}

.clauses li:first-child .conjunction {
    display: none;
}

.focused {
  outline: 2px solid black;
  background-color:var(--selection-color);
}
.loc-special, .backtrace-empty {
  font-style: italic;
}
.last-loc {
  overflow-x: clip;
  text-overflow: ellipsis;
}
.first-loc {
  overflow-x: clip;
  text-overflow: ellipsis;
}
.loc-in-file {
  font-style: italic;
}
.total-allocations {
  font-weight: bold;
}
.info-label {
  font-weight: bold;
}
.indented {
  margin-inline-start: 40px;
}
.backtrace {
}
.backtrace-inline {
  display: inline-block;
}
.backtrace-ellipsis {
  list-style-type: none;
}
.double-button {
  display: inline-grid;
  grid-template:
    "one" auto
    "two" auto
      / auto;
  vertical-align: middle;
}
button.expander-button {
  background-color: inherit;
  padding: 0;
  font-family: inherit;
  font-size: inherit;
  font-weight: bold;
  color: blue;
  cursor: pointer;
  border: none;
}
.expander-closed .expander-content {
  display: none;
}
